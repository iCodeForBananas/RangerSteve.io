{% extends 'master.nunjucks' %}

{% block title %}Create a Room | RangerSteve.io{% endblock %}

{% block content %}
<span id="beta-label">Beta</span>

<section class="main-section">
  <div class="col-xs-12">
      <div class="text-center">
          <span class="main-header">
              Ranger Steve
          </span>
      </div>

        <div class="home-content">
            <div id="browser-recommendation" class="alert alert-info text-center">
                We recommend using Chrome browser for the best game performance
            </div>
            <div class="well">
                <form action="/game" method="GET">
                  <div class="form-group">
                    <label>Name of Room</label>
                    <input name="roomId" type="text" class="form-control">
                  </div>

                  <div class="form-group">
                    <label>Starting Map</label>
                    <input name="map" type="text" class="form-control">
                  </div>

                  <div class="form-group">
                    <label>Starting Gamemode</label>
                    <input name="gamemode" type="text" class="form-control">
                  </div>

                  <button
                      type="submit"
                      class="btn btn-success btn-lg btn-block"
                      id="play-button"
                  >
                      Play Now
                  </button>
                </form>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block scripts %}
<script>
  var state = {
    auth: null
  }

  // Check if the user is signed in
  firebase.auth().onAuthStateChanged(function(auth) {
    if (auth) {
      state.auth = auth
      showUserContainer()
      fetchUser()
      updateUsernameInput()
    } else {
      showLoginContainer()
    }
  })

  function fetchUser() {
    var ref = firebase.database().ref('users/' + state.auth.uid)
    ref.on('value', function(snapshot) {
      state.user = snapshot.val()
      localStorage.setItem('nickname', JSON.stringify(state.user.username))
    })
  }

  function updateUsernameInput() {
    var usernameRef = firebase.database().ref('users/' + state.auth.uid + '/username')
    usernameRef.on('value', function(snapshot) {
      $('#user-container').find('#username').val(snapshot.val())
    })
  }

  function showUserContainer() {
    $('#user-container').removeClass('hidden')
    $('#login-container').addClass('hidden')
  }

  function showLoginContainer() {
    $('#user-container').addClass('hidden')
    $('#login-container').removeClass('hidden')
  }

  function claimUsername(next) {
    var username = $('#username').val()
    if (username === state.user.username) return

    firebase.database().ref('username_lookup/' + username).set(state.auth.uid, function(err) {
      if (err) { return alert('Username already taken.') }
      next()
    })
  }

  function writeUserData() {
    firebase.database().ref('users/' + state.auth.uid).set({
      username: $('#username').val(),
    })
    fetchUser()
    alert('Changes saved!')
  }

  function logoutUser() {
    firebase.auth().signOut().then(function() {
      // Sign-out successful.
      showLoginContainer()
    }, function(error) {
      // An error happened.
      showUserContainer()
    });
  }

  function attemptLoginWithGoogle() {
    var provider = new firebase.auth.GoogleAuthProvider();
    firebase.auth().signInWithPopup(provider).then(function(result) {
      // This gives you a Google Access Token. You can use it to access the Google API.
      var token = result.credential.accessToken;
      // The signed-in user info.
      var user = result.user;
      // ...
    }).catch(function(error) {
      // Handle Errors here.
      var errorCode = error.code;
      var errorMessage = error.message;
      // The email of the user's account used.
      var email = error.email;
      // The firebase.auth.AuthCredential type that was used.
      var credential = error.credential;
      // ...
    });
  }

    if (! isChromeBrowser()) showBrowserRecommendation()

    if (
        window.location.href.indexOf('https://rangersteve.io') > -1 ||
        window.location.href.indexOf('http://localhost') > -1
    ) {
        $('#servers-container').find('a:first-child').addClass('active')
    } else if (window.location.href.indexOf('https://eu.rangersteve.io') > -1) {
        $('#servers-container').find('a:last-child').addClass('active')
    }

    $('.room-link').click(function() {
        window.location = $(this).data('href')
    })

    function isChromeBrowser() {
        return navigator.userAgent.indexOf('Chrome') > -1
    }

    function showBrowserRecommendation() {
        $('#browser-recommendation').show()
    }

    {% if isProduction %}
        $('#play-button').on('click', function(evt) {
            mixpanel.track('playButton:click')
        })

        $('#discord-button').on('click', function(evt) {
            mixpanel.track('discordButton:click')
        })
    {% endif %}
</script>
{% endblock %}
